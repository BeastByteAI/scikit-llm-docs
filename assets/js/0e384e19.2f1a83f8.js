"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{7876:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=i(5893),s=i(1151);const o={sidebar_position:1},a="Quick Start",l={id:"intro",title:"Quick Start",description:"Scikit-LLM allows you to seamlessly integrate powerful language models into scikit-learn for enhanced text analysis tasks. Let's see how it is possible to use Scikit-LLM to perform zero-shot text classification with GPT-4.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/scikit-llm-docs/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Backend Families",permalink:"/scikit-llm-docs/docs/backend-families"}},r={},c=[{value:"Installation",id:"installation",level:2},{value:"API Key Configuration",id:"api-key-configuration",level:2},{value:"Zero-Shot Text Classification",id:"zero-shot-text-classification",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,n.jsx)(t.p,{children:"Scikit-LLM allows you to seamlessly integrate powerful language models into scikit-learn for enhanced text analysis tasks. Let's see how it is possible to use Scikit-LLM to perform zero-shot text classification with GPT-4."}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.p,{children:"First of all, it is necessary to install Scikit-LLM. You can do it by running the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"pip install scikit-llm\n"})}),"\n",(0,n.jsx)(t.h2,{id:"api-key-configuration",children:"API Key Configuration"}),"\n",(0,n.jsxs)(t.p,{children:["For this example, we will use GPT-4, which requires an OpenAI API key. You can get one ",(0,n.jsx)(t.a,{href:"https://platform.openai.com/api-keys",children:"here"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Once you have your API key, you can set it as follows:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from skllm.config import SKLLMConfig\n\nSKLLMConfig.set_openai_key("<YOUR_KEY>")\nSKLLMConfig.set_openai_org("<YOUR_ORGANIZATION_ID>")\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Note:"})," Scikit-LLM supports other language models, including the locally hosted ones. For more information, please refer to the ",(0,n.jsx)(t.a,{href:"/docs/backend-families",children:"Backend Families"})," section."]}),"\n",(0,n.jsx)(t.h2,{id:"zero-shot-text-classification",children:"Zero-Shot Text Classification"}),"\n",(0,n.jsx)(t.p,{children:"Now, we are ready to perform zero-shot text classification with GPT-4. Let's start by loading a sample dataset:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"from skllm.datasets import get_classification_dataset\n\n# demo sentiment analysis dataset\n# labels: positive, negative, neutral\nX, y = get_classification_dataset()\n"})}),"\n",(0,n.jsx)(t.p,{children:"Then, we can create a classifier instance and fit it using conventional scikit-learn syntax:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from skllm.models.gpt.classification.zero_shot import ZeroShotGPTClassifier\n\nclf = ZeroShotGPTClassifier(model="gpt-4")\nclf.fit(X,y)\nclf.predict(X)\n'})}),"\n",(0,n.jsx)(t.p,{children:"Scikit-LLM will automatically query the OpenAI API and transform the response into a regular list of labels."}),"\n",(0,n.jsx)(t.p,{children:'Additionally, Scikit-LLM will ensure that the obtained response contains a valid label. If this is not the case, a label will be selected randomly (label probabilities are proportional to label occurrences in the "training" set).'}),"\n",(0,n.jsx)(t.p,{children:'Furthermore, since the "training" data is not strictly required, it can be fully omitted. The only thing that has to be provided is the list of candidate labels.'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from skllm.models.gpt.classification.zero_shot import ZeroShotGPTClassifier\n\nclf = ZeroShotGPTClassifier(model="gpt-4")\nclf.fit(None, ["positive", "negative", "neutral"])\nclf.predict(X)\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>l,a:()=>a});var n=i(7294);const s={},o=n.createContext(s);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);