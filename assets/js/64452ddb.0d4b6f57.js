"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[561],{4109:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=r(5893),n=r(1151);const i={sidebar_position:1},o="Text Summarization",a={id:"text-to-text/text-summarization",title:"Text Summarization",description:"LLMs excel at performing summarization tasks. Scikit-LLM provides a summarizer that can be used both as stand-alone estimator, or as a preprocessor (in this case we can make an analogy with a dimensionality reduction preprocessor).",source:"@site/docs/text-to-text/text-summarization.md",sourceDirName:"text-to-text",slug:"/text-to-text/text-summarization",permalink:"/docs/text-to-text/text-summarization",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Text-to-text Modelling",permalink:"/docs/category/text-to-text-modelling"},next:{title:"Text Translation",permalink:"/docs/text-to-text/text-translation"}},d={},c=[{value:"API Reference",id:"api-reference",level:2},{value:"GPTSummarizer",id:"gptsummarizer",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"text-summarization",children:"Text Summarization"}),"\n",(0,s.jsx)(t.p,{children:"LLMs excel at performing summarization tasks. Scikit-LLM provides a summarizer that can be used both as stand-alone estimator, or as a preprocessor (in this case we can make an analogy with a dimensionality reduction preprocessor)."}),"\n",(0,s.jsx)(t.p,{children:"Example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'from skllm.models.gpt.text2text.summarization import GPTSummarizer\nfrom skllm.datasets import get_summarization_dataset\n\nX = get_summarization_dataset()\nsummarizer = GPTSummarizer(model="gpt-3.5-turbo", max_words=15)\nX_summarized = summarizer.fit_transform(X)\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Please be aware that the ",(0,s.jsx)(t.code,{children:"max_words"})," hyperparameter sets a soft limit, which is not strictly enforced outside of the prompt. Therefore, in some cases, the actual number of words might be slightly higher."]}),"\n",(0,s.jsxs)(t.p,{children:["Additionally, it is possible to generate a summary, emphasizing a specific concept, by providing an optional parameter ",(0,s.jsx)(t.code,{children:"focus"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'summarizer = GPTSummarizer(model="gpt-3.5-turbo", max_words=15, focus="apples")\n'})}),"\n",(0,s.jsx)(t.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsx)(t.p,{children:"The following API reference only lists the parameters needed for the initialization of the estimator. The remaining methods follow the syntax of a scikit-learn transformer."}),"\n",(0,s.jsx)(t.h3,{id:"gptsummarizer",children:"GPTSummarizer"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from skllm.models.gpt.text2text.summarization import GPTSummarizer\n"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Parameter"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Type"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Description"})})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"model"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"str"})}),(0,s.jsx)(t.td,{children:'Model to use, by default "gpt-3.5-turbo".'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"key"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Optional[str]"})}),(0,s.jsx)(t.td,{children:"Estimator-specific API key; if None, retrieved from the global config, by default None."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"org"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Optional[str]"})}),(0,s.jsx)(t.td,{children:"Estimator-specific ORG key; if None, retrieved from the global config, by default None."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"max_words"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"int"})}),(0,s.jsx)(t.td,{children:"Soft limit of the summary length, by default 15."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"focus"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Optional[str]"})}),(0,s.jsx)(t.td,{children:"Concept in the text to focus on, by default None."})]})]})]})]})}function m(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>o});var s=r(7294);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);